// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FilledBatchWithZeros extends ethereum.Event {
  get params(): FilledBatchWithZeros__Params {
    return new FilledBatchWithZeros__Params(this);
  }
}

export class FilledBatchWithZeros__Params {
  _event: FilledBatchWithZeros;

  constructor(event: FilledBatchWithZeros) {
    this._event = event;
  }

  get startIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get numZeros(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class JoinSplitProcessed extends ethereum.Event {
  get params(): JoinSplitProcessed__Params {
    return new JoinSplitProcessed__Params(this);
  }
}

export class JoinSplitProcessed__Params {
  _event: JoinSplitProcessed;

  constructor(event: JoinSplitProcessed) {
    this._event = event;
  }

  get oldNoteANullifier(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldNoteBNullifier(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newNoteAIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newNoteBIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get encSenderCanonAddrC1(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get encSenderCanonAddrC2(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get encodedAsset(): JoinSplitProcessedEncodedAssetStruct {
    return changetype<JoinSplitProcessedEncodedAssetStruct>(
      this._event.parameters[8].value.toTuple()
    );
  }

  get publicSpend(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get newNoteAEncrypted(): JoinSplitProcessedNewNoteAEncryptedStruct {
    return changetype<JoinSplitProcessedNewNoteAEncryptedStruct>(
      this._event.parameters[10].value.toTuple()
    );
  }

  get newNoteBEncrypted(): JoinSplitProcessedNewNoteBEncryptedStruct {
    return changetype<JoinSplitProcessedNewNoteBEncryptedStruct>(
      this._event.parameters[11].value.toTuple()
    );
  }
}

export class JoinSplitProcessedEncodedAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class JoinSplitProcessedNewNoteAEncryptedStruct extends ethereum.Tuple {
  get owner(): JoinSplitProcessedNewNoteAEncryptedOwnerStruct {
    return changetype<JoinSplitProcessedNewNoteAEncryptedOwnerStruct>(
      this[0].toTuple()
    );
  }

  get encappedKey(): BigInt {
    return this[1].toBigInt();
  }

  get encryptedNonce(): BigInt {
    return this[2].toBigInt();
  }

  get encryptedValue(): BigInt {
    return this[3].toBigInt();
  }
}

export class JoinSplitProcessedNewNoteAEncryptedOwnerStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class JoinSplitProcessedNewNoteBEncryptedStruct extends ethereum.Tuple {
  get owner(): JoinSplitProcessedNewNoteBEncryptedOwnerStruct {
    return changetype<JoinSplitProcessedNewNoteBEncryptedOwnerStruct>(
      this[0].toTuple()
    );
  }

  get encappedKey(): BigInt {
    return this[1].toBigInt();
  }

  get encryptedNonce(): BigInt {
    return this[2].toBigInt();
  }

  get encryptedValue(): BigInt {
    return this[3].toBigInt();
  }
}

export class JoinSplitProcessedNewNoteBEncryptedOwnerStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RefundProcessed extends ethereum.Event {
  get params(): RefundProcessed__Params {
    return new RefundProcessed__Params(this);
  }
}

export class RefundProcessed__Params {
  _event: RefundProcessed;

  constructor(event: RefundProcessed) {
    this._event = event;
  }

  get refundAddr(): RefundProcessedRefundAddrStruct {
    return changetype<RefundProcessedRefundAddrStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }

  get nonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get encodedAssetAddr(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get merkleIndex(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class RefundProcessedRefundAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class SubtreeBatchFillerPermissionSet extends ethereum.Event {
  get params(): SubtreeBatchFillerPermissionSet__Params {
    return new SubtreeBatchFillerPermissionSet__Params(this);
  }
}

export class SubtreeBatchFillerPermissionSet__Params {
  _event: SubtreeBatchFillerPermissionSet;

  constructor(event: SubtreeBatchFillerPermissionSet) {
    this._event = event;
  }

  get filler(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get permission(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class SubtreeUpdate extends ethereum.Event {
  get params(): SubtreeUpdate__Params {
    return new SubtreeUpdate__Params(this);
  }
}

export class SubtreeUpdate__Params {
  _event: SubtreeUpdate;

  constructor(event: SubtreeUpdate) {
    this._event = event;
  }

  get newRoot(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get subtreeBatchOffset(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SupportedContractAllowlistPermissionSet extends ethereum.Event {
  get params(): SupportedContractAllowlistPermissionSet__Params {
    return new SupportedContractAllowlistPermissionSet__Params(this);
  }
}

export class SupportedContractAllowlistPermissionSet__Params {
  _event: SupportedContractAllowlistPermissionSet;

  constructor(event: SupportedContractAllowlistPermissionSet) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get permission(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Handler___receivedAssetsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getEncodedAssetAddr(): BigInt {
    return this.value0;
  }

  getEncodedAssetId(): BigInt {
    return this.value1;
  }
}

export class Handler__executeActionsResult {
  value0: Array<boolean>;
  value1: Array<Bytes>;

  constructor(value0: Array<boolean>, value1: Array<Bytes>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBooleanArray(this.value0));
    map.set("value1", ethereum.Value.fromBytesArray(this.value1));
    return map;
  }

  getSuccesses(): Array<boolean> {
    return this.value0;
  }

  getResults(): Array<Bytes> {
    return this.value1;
  }
}

export class Handler__executeActionsInputOpStruct extends ethereum.Tuple {
  get joinSplits(): Array<Handler__executeActionsInputOpJoinSplitsStruct> {
    return this[0].toTupleArray<
      Handler__executeActionsInputOpJoinSplitsStruct
    >();
  }

  get refundAddr(): Handler__executeActionsInputOpRefundAddrStruct {
    return changetype<Handler__executeActionsInputOpRefundAddrStruct>(
      this[1].toTuple()
    );
  }

  get encodedRefundAssets(): Array<
    Handler__executeActionsInputOpEncodedRefundAssetsStruct
  > {
    return this[2].toTupleArray<
      Handler__executeActionsInputOpEncodedRefundAssetsStruct
    >();
  }

  get actions(): Array<Handler__executeActionsInputOpActionsStruct> {
    return this[3].toTupleArray<Handler__executeActionsInputOpActionsStruct>();
  }

  get encodedGasAsset(): Handler__executeActionsInputOpEncodedGasAssetStruct {
    return changetype<Handler__executeActionsInputOpEncodedGasAssetStruct>(
      this[4].toTuple()
    );
  }

  get gasAssetRefundThreshold(): BigInt {
    return this[5].toBigInt();
  }

  get executionGasLimit(): BigInt {
    return this[6].toBigInt();
  }

  get maxNumRefunds(): BigInt {
    return this[7].toBigInt();
  }

  get gasPrice(): BigInt {
    return this[8].toBigInt();
  }

  get chainId(): BigInt {
    return this[9].toBigInt();
  }

  get deadline(): BigInt {
    return this[10].toBigInt();
  }

  get atomicActions(): boolean {
    return this[11].toBoolean();
  }
}

export class Handler__executeActionsInputOpJoinSplitsStruct extends ethereum.Tuple {
  get commitmentTreeRoot(): BigInt {
    return this[0].toBigInt();
  }

  get nullifierA(): BigInt {
    return this[1].toBigInt();
  }

  get nullifierB(): BigInt {
    return this[2].toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this[3].toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this[4].toBigInt();
  }

  get encSenderCanonAddrC1(): BigInt {
    return this[5].toBigInt();
  }

  get encSenderCanonAddrC2(): BigInt {
    return this[6].toBigInt();
  }

  get proof(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get encodedAsset(): Handler__executeActionsInputOpJoinSplitsEncodedAssetStruct {
    return changetype<
      Handler__executeActionsInputOpJoinSplitsEncodedAssetStruct
    >(this[8].toTuple());
  }

  get publicSpend(): BigInt {
    return this[9].toBigInt();
  }

  get newNoteAEncrypted(): Handler__executeActionsInputOpJoinSplitsNewNoteAEncryptedStruct {
    return changetype<
      Handler__executeActionsInputOpJoinSplitsNewNoteAEncryptedStruct
    >(this[10].toTuple());
  }

  get newNoteBEncrypted(): Handler__executeActionsInputOpJoinSplitsNewNoteBEncryptedStruct {
    return changetype<
      Handler__executeActionsInputOpJoinSplitsNewNoteBEncryptedStruct
    >(this[11].toTuple());
  }
}

export class Handler__executeActionsInputOpJoinSplitsEncodedAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__executeActionsInputOpJoinSplitsNewNoteAEncryptedStruct extends ethereum.Tuple {
  get owner(): Handler__executeActionsInputOpJoinSplitsNewNoteAEncryptedOwnerStruct {
    return changetype<
      Handler__executeActionsInputOpJoinSplitsNewNoteAEncryptedOwnerStruct
    >(this[0].toTuple());
  }

  get encappedKey(): BigInt {
    return this[1].toBigInt();
  }

  get encryptedNonce(): BigInt {
    return this[2].toBigInt();
  }

  get encryptedValue(): BigInt {
    return this[3].toBigInt();
  }
}

export class Handler__executeActionsInputOpJoinSplitsNewNoteAEncryptedOwnerStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__executeActionsInputOpJoinSplitsNewNoteBEncryptedStruct extends ethereum.Tuple {
  get owner(): Handler__executeActionsInputOpJoinSplitsNewNoteBEncryptedOwnerStruct {
    return changetype<
      Handler__executeActionsInputOpJoinSplitsNewNoteBEncryptedOwnerStruct
    >(this[0].toTuple());
  }

  get encappedKey(): BigInt {
    return this[1].toBigInt();
  }

  get encryptedNonce(): BigInt {
    return this[2].toBigInt();
  }

  get encryptedValue(): BigInt {
    return this[3].toBigInt();
  }
}

export class Handler__executeActionsInputOpJoinSplitsNewNoteBEncryptedOwnerStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__executeActionsInputOpRefundAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__executeActionsInputOpEncodedRefundAssetsStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__executeActionsInputOpActionsStruct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get encodedFunction(): Bytes {
    return this[1].toBytes();
  }
}

export class Handler__executeActionsInputOpEncodedGasAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__handleOperationResultOpResultStruct extends ethereum.Tuple {
  get opProcessed(): boolean {
    return this[0].toBoolean();
  }

  get assetsUnwrapped(): boolean {
    return this[1].toBoolean();
  }

  get failureReason(): string {
    return this[2].toString();
  }

  get callSuccesses(): Array<boolean> {
    return this[3].toBooleanArray();
  }

  get callResults(): Array<Bytes> {
    return this[4].toBytesArray();
  }

  get verificationGas(): BigInt {
    return this[5].toBigInt();
  }

  get executionGas(): BigInt {
    return this[6].toBigInt();
  }

  get numRefunds(): BigInt {
    return this[7].toBigInt();
  }
}

export class Handler__handleOperationInputOpStruct extends ethereum.Tuple {
  get joinSplits(): Array<Handler__handleOperationInputOpJoinSplitsStruct> {
    return this[0].toTupleArray<
      Handler__handleOperationInputOpJoinSplitsStruct
    >();
  }

  get refundAddr(): Handler__handleOperationInputOpRefundAddrStruct {
    return changetype<Handler__handleOperationInputOpRefundAddrStruct>(
      this[1].toTuple()
    );
  }

  get encodedRefundAssets(): Array<
    Handler__handleOperationInputOpEncodedRefundAssetsStruct
  > {
    return this[2].toTupleArray<
      Handler__handleOperationInputOpEncodedRefundAssetsStruct
    >();
  }

  get actions(): Array<Handler__handleOperationInputOpActionsStruct> {
    return this[3].toTupleArray<Handler__handleOperationInputOpActionsStruct>();
  }

  get encodedGasAsset(): Handler__handleOperationInputOpEncodedGasAssetStruct {
    return changetype<Handler__handleOperationInputOpEncodedGasAssetStruct>(
      this[4].toTuple()
    );
  }

  get gasAssetRefundThreshold(): BigInt {
    return this[5].toBigInt();
  }

  get executionGasLimit(): BigInt {
    return this[6].toBigInt();
  }

  get maxNumRefunds(): BigInt {
    return this[7].toBigInt();
  }

  get gasPrice(): BigInt {
    return this[8].toBigInt();
  }

  get chainId(): BigInt {
    return this[9].toBigInt();
  }

  get deadline(): BigInt {
    return this[10].toBigInt();
  }

  get atomicActions(): boolean {
    return this[11].toBoolean();
  }
}

export class Handler__handleOperationInputOpJoinSplitsStruct extends ethereum.Tuple {
  get commitmentTreeRoot(): BigInt {
    return this[0].toBigInt();
  }

  get nullifierA(): BigInt {
    return this[1].toBigInt();
  }

  get nullifierB(): BigInt {
    return this[2].toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this[3].toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this[4].toBigInt();
  }

  get encSenderCanonAddrC1(): BigInt {
    return this[5].toBigInt();
  }

  get encSenderCanonAddrC2(): BigInt {
    return this[6].toBigInt();
  }

  get proof(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get encodedAsset(): Handler__handleOperationInputOpJoinSplitsEncodedAssetStruct {
    return changetype<
      Handler__handleOperationInputOpJoinSplitsEncodedAssetStruct
    >(this[8].toTuple());
  }

  get publicSpend(): BigInt {
    return this[9].toBigInt();
  }

  get newNoteAEncrypted(): Handler__handleOperationInputOpJoinSplitsNewNoteAEncryptedStruct {
    return changetype<
      Handler__handleOperationInputOpJoinSplitsNewNoteAEncryptedStruct
    >(this[10].toTuple());
  }

  get newNoteBEncrypted(): Handler__handleOperationInputOpJoinSplitsNewNoteBEncryptedStruct {
    return changetype<
      Handler__handleOperationInputOpJoinSplitsNewNoteBEncryptedStruct
    >(this[11].toTuple());
  }
}

export class Handler__handleOperationInputOpJoinSplitsEncodedAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__handleOperationInputOpJoinSplitsNewNoteAEncryptedStruct extends ethereum.Tuple {
  get owner(): Handler__handleOperationInputOpJoinSplitsNewNoteAEncryptedOwnerStruct {
    return changetype<
      Handler__handleOperationInputOpJoinSplitsNewNoteAEncryptedOwnerStruct
    >(this[0].toTuple());
  }

  get encappedKey(): BigInt {
    return this[1].toBigInt();
  }

  get encryptedNonce(): BigInt {
    return this[2].toBigInt();
  }

  get encryptedValue(): BigInt {
    return this[3].toBigInt();
  }
}

export class Handler__handleOperationInputOpJoinSplitsNewNoteAEncryptedOwnerStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__handleOperationInputOpJoinSplitsNewNoteBEncryptedStruct extends ethereum.Tuple {
  get owner(): Handler__handleOperationInputOpJoinSplitsNewNoteBEncryptedOwnerStruct {
    return changetype<
      Handler__handleOperationInputOpJoinSplitsNewNoteBEncryptedOwnerStruct
    >(this[0].toTuple());
  }

  get encappedKey(): BigInt {
    return this[1].toBigInt();
  }

  get encryptedNonce(): BigInt {
    return this[2].toBigInt();
  }

  get encryptedValue(): BigInt {
    return this[3].toBigInt();
  }
}

export class Handler__handleOperationInputOpJoinSplitsNewNoteBEncryptedOwnerStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__handleOperationInputOpRefundAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__handleOperationInputOpEncodedRefundAssetsStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__handleOperationInputOpActionsStruct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get encodedFunction(): Bytes {
    return this[1].toBytes();
  }
}

export class Handler__handleOperationInputOpEncodedGasAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler extends ethereum.SmartContract {
  static bind(address: Address): Handler {
    return new Handler("Handler", address);
  }

  ENTERED_EXECUTE_ACTIONS(): BigInt {
    let result = super.call(
      "ENTERED_EXECUTE_ACTIONS",
      "ENTERED_EXECUTE_ACTIONS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_ENTERED_EXECUTE_ACTIONS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ENTERED_EXECUTE_ACTIONS",
      "ENTERED_EXECUTE_ACTIONS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ENTERED_HANDLE_OPERATION(): BigInt {
    let result = super.call(
      "ENTERED_HANDLE_OPERATION",
      "ENTERED_HANDLE_OPERATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_ENTERED_HANDLE_OPERATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ENTERED_HANDLE_OPERATION",
      "ENTERED_HANDLE_OPERATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  NOT_ENTERED(): BigInt {
    let result = super.call("NOT_ENTERED", "NOT_ENTERED():(uint256)", []);

    return result[0].toBigInt();
  }

  try_NOT_ENTERED(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("NOT_ENTERED", "NOT_ENTERED():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _nullifierSet(param0: BigInt): boolean {
    let result = super.call("_nullifierSet", "_nullifierSet(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try__nullifierSet(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_nullifierSet",
      "_nullifierSet(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _pastRoots(param0: BigInt): boolean {
    let result = super.call("_pastRoots", "_pastRoots(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try__pastRoots(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("_pastRoots", "_pastRoots(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _receivedAssets(param0: BigInt): Handler___receivedAssetsResult {
    let result = super.call(
      "_receivedAssets",
      "_receivedAssets(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Handler___receivedAssetsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try__receivedAssets(
    param0: BigInt
  ): ethereum.CallResult<Handler___receivedAssetsResult> {
    let result = super.tryCall(
      "_receivedAssets",
      "_receivedAssets(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Handler___receivedAssetsResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  _subtreeBatchFillers(param0: Address): boolean {
    let result = super.call(
      "_subtreeBatchFillers",
      "_subtreeBatchFillers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try__subtreeBatchFillers(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_subtreeBatchFillers",
      "_subtreeBatchFillers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _supportedContractAllowlist(param0: Address): boolean {
    let result = super.call(
      "_supportedContractAllowlist",
      "_supportedContractAllowlist(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try__supportedContractAllowlist(
    param0: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_supportedContractAllowlist",
      "_supportedContractAllowlist(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _teller(): Address {
    let result = super.call("_teller", "_teller():(address)", []);

    return result[0].toAddress();
  }

  try__teller(): ethereum.CallResult<Address> {
    let result = super.tryCall("_teller", "_teller():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  count(): BigInt {
    let result = super.call("count", "count():(uint256)", []);

    return result[0].toBigInt();
  }

  try_count(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("count", "count():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  executeActions(
    op: Handler__executeActionsInputOpStruct
  ): Handler__executeActionsResult {
    let result = super.call(
      "executeActions",
      "executeActions(((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[8],(uint256,uint256),uint256,((uint256,uint256),uint256,uint256,uint256),((uint256,uint256),uint256,uint256,uint256))[],(uint256,uint256),(uint256,uint256)[],(address,bytes)[],(uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,bool)):(bool[],bytes[])",
      [ethereum.Value.fromTuple(op)]
    );

    return new Handler__executeActionsResult(
      result[0].toBooleanArray(),
      result[1].toBytesArray()
    );
  }

  try_executeActions(
    op: Handler__executeActionsInputOpStruct
  ): ethereum.CallResult<Handler__executeActionsResult> {
    let result = super.tryCall(
      "executeActions",
      "executeActions(((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[8],(uint256,uint256),uint256,((uint256,uint256),uint256,uint256,uint256),((uint256,uint256),uint256,uint256,uint256))[],(uint256,uint256),(uint256,uint256)[],(address,bytes)[],(uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,bool)):(bool[],bytes[])",
      [ethereum.Value.fromTuple(op)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Handler__executeActionsResult(
        value[0].toBooleanArray(),
        value[1].toBytesArray()
      )
    );
  }

  handleOperation(
    op: Handler__handleOperationInputOpStruct,
    perJoinSplitVerifyGas: BigInt,
    bundler: Address
  ): Handler__handleOperationResultOpResultStruct {
    let result = super.call(
      "handleOperation",
      "handleOperation(((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[8],(uint256,uint256),uint256,((uint256,uint256),uint256,uint256,uint256),((uint256,uint256),uint256,uint256,uint256))[],(uint256,uint256),(uint256,uint256)[],(address,bytes)[],(uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,bool),uint256,address):((bool,bool,string,bool[],bytes[],uint256,uint256,uint256))",
      [
        ethereum.Value.fromTuple(op),
        ethereum.Value.fromUnsignedBigInt(perJoinSplitVerifyGas),
        ethereum.Value.fromAddress(bundler)
      ]
    );

    return changetype<Handler__handleOperationResultOpResultStruct>(
      result[0].toTuple()
    );
  }

  try_handleOperation(
    op: Handler__handleOperationInputOpStruct,
    perJoinSplitVerifyGas: BigInt,
    bundler: Address
  ): ethereum.CallResult<Handler__handleOperationResultOpResultStruct> {
    let result = super.tryCall(
      "handleOperation",
      "handleOperation(((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256[8],(uint256,uint256),uint256,((uint256,uint256),uint256,uint256,uint256),((uint256,uint256),uint256,uint256,uint256))[],(uint256,uint256),(uint256,uint256)[],(address,bytes)[],(uint256,uint256),uint256,uint256,uint256,uint256,uint256,uint256,bool),uint256,address):((bool,bool,string,bool[],bytes[],uint256,uint256,uint256))",
      [
        ethereum.Value.fromTuple(op),
        ethereum.Value.fromUnsignedBigInt(perJoinSplitVerifyGas),
        ethereum.Value.fromAddress(bundler)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Handler__handleOperationResultOpResultStruct>(
        value[0].toTuple()
      )
    );
  }

  onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    ids: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(ids),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    ids: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(ids),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    param0: Address,
    param1: Address,
    id: BigInt,
    param3: BigInt,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    param0: Address,
    param1: Address,
    id: BigInt,
    param3: BigInt,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    id: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    id: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  reentrancyGuardStage(): BigInt {
    let result = super.call(
      "reentrancyGuardStage",
      "reentrancyGuardStage():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_reentrancyGuardStage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "reentrancyGuardStage",
      "reentrancyGuardStage():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  root(): BigInt {
    let result = super.call("root", "root():(uint256)", []);

    return result[0].toBigInt();
  }

  try_root(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("root", "root():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalCount(): BigInt {
    let result = super.call("totalCount", "totalCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalCount", "totalCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ApplySubtreeUpdateCall extends ethereum.Call {
  get inputs(): ApplySubtreeUpdateCall__Inputs {
    return new ApplySubtreeUpdateCall__Inputs(this);
  }

  get outputs(): ApplySubtreeUpdateCall__Outputs {
    return new ApplySubtreeUpdateCall__Outputs(this);
  }
}

export class ApplySubtreeUpdateCall__Inputs {
  _call: ApplySubtreeUpdateCall;

  constructor(call: ApplySubtreeUpdateCall) {
    this._call = call;
  }

  get newRoot(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proof(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class ApplySubtreeUpdateCall__Outputs {
  _call: ApplySubtreeUpdateCall;

  constructor(call: ApplySubtreeUpdateCall) {
    this._call = call;
  }
}

export class ExecuteActionsCall extends ethereum.Call {
  get inputs(): ExecuteActionsCall__Inputs {
    return new ExecuteActionsCall__Inputs(this);
  }

  get outputs(): ExecuteActionsCall__Outputs {
    return new ExecuteActionsCall__Outputs(this);
  }
}

export class ExecuteActionsCall__Inputs {
  _call: ExecuteActionsCall;

  constructor(call: ExecuteActionsCall) {
    this._call = call;
  }

  get op(): ExecuteActionsCallOpStruct {
    return changetype<ExecuteActionsCallOpStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class ExecuteActionsCall__Outputs {
  _call: ExecuteActionsCall;

  constructor(call: ExecuteActionsCall) {
    this._call = call;
  }

  get successes(): Array<boolean> {
    return this._call.outputValues[0].value.toBooleanArray();
  }

  get results(): Array<Bytes> {
    return this._call.outputValues[1].value.toBytesArray();
  }
}

export class ExecuteActionsCallOpStruct extends ethereum.Tuple {
  get joinSplits(): Array<ExecuteActionsCallOpJoinSplitsStruct> {
    return this[0].toTupleArray<ExecuteActionsCallOpJoinSplitsStruct>();
  }

  get refundAddr(): ExecuteActionsCallOpRefundAddrStruct {
    return changetype<ExecuteActionsCallOpRefundAddrStruct>(this[1].toTuple());
  }

  get encodedRefundAssets(): Array<
    ExecuteActionsCallOpEncodedRefundAssetsStruct
  > {
    return this[2].toTupleArray<
      ExecuteActionsCallOpEncodedRefundAssetsStruct
    >();
  }

  get actions(): Array<ExecuteActionsCallOpActionsStruct> {
    return this[3].toTupleArray<ExecuteActionsCallOpActionsStruct>();
  }

  get encodedGasAsset(): ExecuteActionsCallOpEncodedGasAssetStruct {
    return changetype<ExecuteActionsCallOpEncodedGasAssetStruct>(
      this[4].toTuple()
    );
  }

  get gasAssetRefundThreshold(): BigInt {
    return this[5].toBigInt();
  }

  get executionGasLimit(): BigInt {
    return this[6].toBigInt();
  }

  get maxNumRefunds(): BigInt {
    return this[7].toBigInt();
  }

  get gasPrice(): BigInt {
    return this[8].toBigInt();
  }

  get chainId(): BigInt {
    return this[9].toBigInt();
  }

  get deadline(): BigInt {
    return this[10].toBigInt();
  }

  get atomicActions(): boolean {
    return this[11].toBoolean();
  }
}

export class ExecuteActionsCallOpJoinSplitsStruct extends ethereum.Tuple {
  get commitmentTreeRoot(): BigInt {
    return this[0].toBigInt();
  }

  get nullifierA(): BigInt {
    return this[1].toBigInt();
  }

  get nullifierB(): BigInt {
    return this[2].toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this[3].toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this[4].toBigInt();
  }

  get encSenderCanonAddrC1(): BigInt {
    return this[5].toBigInt();
  }

  get encSenderCanonAddrC2(): BigInt {
    return this[6].toBigInt();
  }

  get proof(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get encodedAsset(): ExecuteActionsCallOpJoinSplitsEncodedAssetStruct {
    return changetype<ExecuteActionsCallOpJoinSplitsEncodedAssetStruct>(
      this[8].toTuple()
    );
  }

  get publicSpend(): BigInt {
    return this[9].toBigInt();
  }

  get newNoteAEncrypted(): ExecuteActionsCallOpJoinSplitsNewNoteAEncryptedStruct {
    return changetype<ExecuteActionsCallOpJoinSplitsNewNoteAEncryptedStruct>(
      this[10].toTuple()
    );
  }

  get newNoteBEncrypted(): ExecuteActionsCallOpJoinSplitsNewNoteBEncryptedStruct {
    return changetype<ExecuteActionsCallOpJoinSplitsNewNoteBEncryptedStruct>(
      this[11].toTuple()
    );
  }
}

export class ExecuteActionsCallOpJoinSplitsEncodedAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class ExecuteActionsCallOpJoinSplitsNewNoteAEncryptedStruct extends ethereum.Tuple {
  get owner(): ExecuteActionsCallOpJoinSplitsNewNoteAEncryptedOwnerStruct {
    return changetype<
      ExecuteActionsCallOpJoinSplitsNewNoteAEncryptedOwnerStruct
    >(this[0].toTuple());
  }

  get encappedKey(): BigInt {
    return this[1].toBigInt();
  }

  get encryptedNonce(): BigInt {
    return this[2].toBigInt();
  }

  get encryptedValue(): BigInt {
    return this[3].toBigInt();
  }
}

export class ExecuteActionsCallOpJoinSplitsNewNoteAEncryptedOwnerStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class ExecuteActionsCallOpJoinSplitsNewNoteBEncryptedStruct extends ethereum.Tuple {
  get owner(): ExecuteActionsCallOpJoinSplitsNewNoteBEncryptedOwnerStruct {
    return changetype<
      ExecuteActionsCallOpJoinSplitsNewNoteBEncryptedOwnerStruct
    >(this[0].toTuple());
  }

  get encappedKey(): BigInt {
    return this[1].toBigInt();
  }

  get encryptedNonce(): BigInt {
    return this[2].toBigInt();
  }

  get encryptedValue(): BigInt {
    return this[3].toBigInt();
  }
}

export class ExecuteActionsCallOpJoinSplitsNewNoteBEncryptedOwnerStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class ExecuteActionsCallOpRefundAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class ExecuteActionsCallOpEncodedRefundAssetsStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class ExecuteActionsCallOpActionsStruct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get encodedFunction(): Bytes {
    return this[1].toBytes();
  }
}

export class ExecuteActionsCallOpEncodedGasAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class FillBatchWithZerosCall extends ethereum.Call {
  get inputs(): FillBatchWithZerosCall__Inputs {
    return new FillBatchWithZerosCall__Inputs(this);
  }

  get outputs(): FillBatchWithZerosCall__Outputs {
    return new FillBatchWithZerosCall__Outputs(this);
  }
}

export class FillBatchWithZerosCall__Inputs {
  _call: FillBatchWithZerosCall;

  constructor(call: FillBatchWithZerosCall) {
    this._call = call;
  }
}

export class FillBatchWithZerosCall__Outputs {
  _call: FillBatchWithZerosCall;

  constructor(call: FillBatchWithZerosCall) {
    this._call = call;
  }
}

export class HandleDepositCall extends ethereum.Call {
  get inputs(): HandleDepositCall__Inputs {
    return new HandleDepositCall__Inputs(this);
  }

  get outputs(): HandleDepositCall__Outputs {
    return new HandleDepositCall__Outputs(this);
  }
}

export class HandleDepositCall__Inputs {
  _call: HandleDepositCall;

  constructor(call: HandleDepositCall) {
    this._call = call;
  }

  get deposit(): HandleDepositCallDepositStruct {
    return changetype<HandleDepositCallDepositStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class HandleDepositCall__Outputs {
  _call: HandleDepositCall;

  constructor(call: HandleDepositCall) {
    this._call = call;
  }
}

export class HandleDepositCallDepositStruct extends ethereum.Tuple {
  get spender(): Address {
    return this[0].toAddress();
  }

  get encodedAsset(): HandleDepositCallDepositEncodedAssetStruct {
    return changetype<HandleDepositCallDepositEncodedAssetStruct>(
      this[1].toTuple()
    );
  }

  get value(): BigInt {
    return this[2].toBigInt();
  }

  get depositAddr(): HandleDepositCallDepositDepositAddrStruct {
    return changetype<HandleDepositCallDepositDepositAddrStruct>(
      this[3].toTuple()
    );
  }
}

export class HandleDepositCallDepositEncodedAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleDepositCallDepositDepositAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleOperationCall extends ethereum.Call {
  get inputs(): HandleOperationCall__Inputs {
    return new HandleOperationCall__Inputs(this);
  }

  get outputs(): HandleOperationCall__Outputs {
    return new HandleOperationCall__Outputs(this);
  }
}

export class HandleOperationCall__Inputs {
  _call: HandleOperationCall;

  constructor(call: HandleOperationCall) {
    this._call = call;
  }

  get op(): HandleOperationCallOpStruct {
    return changetype<HandleOperationCallOpStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get perJoinSplitVerifyGas(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get bundler(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class HandleOperationCall__Outputs {
  _call: HandleOperationCall;

  constructor(call: HandleOperationCall) {
    this._call = call;
  }

  get opResult(): HandleOperationCallOpResultStruct {
    return changetype<HandleOperationCallOpResultStruct>(
      this._call.outputValues[0].value.toTuple()
    );
  }
}

export class HandleOperationCallOpStruct extends ethereum.Tuple {
  get joinSplits(): Array<HandleOperationCallOpJoinSplitsStruct> {
    return this[0].toTupleArray<HandleOperationCallOpJoinSplitsStruct>();
  }

  get refundAddr(): HandleOperationCallOpRefundAddrStruct {
    return changetype<HandleOperationCallOpRefundAddrStruct>(this[1].toTuple());
  }

  get encodedRefundAssets(): Array<
    HandleOperationCallOpEncodedRefundAssetsStruct
  > {
    return this[2].toTupleArray<
      HandleOperationCallOpEncodedRefundAssetsStruct
    >();
  }

  get actions(): Array<HandleOperationCallOpActionsStruct> {
    return this[3].toTupleArray<HandleOperationCallOpActionsStruct>();
  }

  get encodedGasAsset(): HandleOperationCallOpEncodedGasAssetStruct {
    return changetype<HandleOperationCallOpEncodedGasAssetStruct>(
      this[4].toTuple()
    );
  }

  get gasAssetRefundThreshold(): BigInt {
    return this[5].toBigInt();
  }

  get executionGasLimit(): BigInt {
    return this[6].toBigInt();
  }

  get maxNumRefunds(): BigInt {
    return this[7].toBigInt();
  }

  get gasPrice(): BigInt {
    return this[8].toBigInt();
  }

  get chainId(): BigInt {
    return this[9].toBigInt();
  }

  get deadline(): BigInt {
    return this[10].toBigInt();
  }

  get atomicActions(): boolean {
    return this[11].toBoolean();
  }
}

export class HandleOperationCallOpJoinSplitsStruct extends ethereum.Tuple {
  get commitmentTreeRoot(): BigInt {
    return this[0].toBigInt();
  }

  get nullifierA(): BigInt {
    return this[1].toBigInt();
  }

  get nullifierB(): BigInt {
    return this[2].toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this[3].toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this[4].toBigInt();
  }

  get encSenderCanonAddrC1(): BigInt {
    return this[5].toBigInt();
  }

  get encSenderCanonAddrC2(): BigInt {
    return this[6].toBigInt();
  }

  get proof(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get encodedAsset(): HandleOperationCallOpJoinSplitsEncodedAssetStruct {
    return changetype<HandleOperationCallOpJoinSplitsEncodedAssetStruct>(
      this[8].toTuple()
    );
  }

  get publicSpend(): BigInt {
    return this[9].toBigInt();
  }

  get newNoteAEncrypted(): HandleOperationCallOpJoinSplitsNewNoteAEncryptedStruct {
    return changetype<HandleOperationCallOpJoinSplitsNewNoteAEncryptedStruct>(
      this[10].toTuple()
    );
  }

  get newNoteBEncrypted(): HandleOperationCallOpJoinSplitsNewNoteBEncryptedStruct {
    return changetype<HandleOperationCallOpJoinSplitsNewNoteBEncryptedStruct>(
      this[11].toTuple()
    );
  }
}

export class HandleOperationCallOpJoinSplitsEncodedAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleOperationCallOpJoinSplitsNewNoteAEncryptedStruct extends ethereum.Tuple {
  get owner(): HandleOperationCallOpJoinSplitsNewNoteAEncryptedOwnerStruct {
    return changetype<
      HandleOperationCallOpJoinSplitsNewNoteAEncryptedOwnerStruct
    >(this[0].toTuple());
  }

  get encappedKey(): BigInt {
    return this[1].toBigInt();
  }

  get encryptedNonce(): BigInt {
    return this[2].toBigInt();
  }

  get encryptedValue(): BigInt {
    return this[3].toBigInt();
  }
}

export class HandleOperationCallOpJoinSplitsNewNoteAEncryptedOwnerStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleOperationCallOpJoinSplitsNewNoteBEncryptedStruct extends ethereum.Tuple {
  get owner(): HandleOperationCallOpJoinSplitsNewNoteBEncryptedOwnerStruct {
    return changetype<
      HandleOperationCallOpJoinSplitsNewNoteBEncryptedOwnerStruct
    >(this[0].toTuple());
  }

  get encappedKey(): BigInt {
    return this[1].toBigInt();
  }

  get encryptedNonce(): BigInt {
    return this[2].toBigInt();
  }

  get encryptedValue(): BigInt {
    return this[3].toBigInt();
  }
}

export class HandleOperationCallOpJoinSplitsNewNoteBEncryptedOwnerStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleOperationCallOpRefundAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleOperationCallOpEncodedRefundAssetsStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleOperationCallOpActionsStruct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get encodedFunction(): Bytes {
    return this[1].toBytes();
  }
}

export class HandleOperationCallOpEncodedGasAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleOperationCallOpResultStruct extends ethereum.Tuple {
  get opProcessed(): boolean {
    return this[0].toBoolean();
  }

  get assetsUnwrapped(): boolean {
    return this[1].toBoolean();
  }

  get failureReason(): string {
    return this[2].toString();
  }

  get callSuccesses(): Array<boolean> {
    return this[3].toBooleanArray();
  }

  get callResults(): Array<Bytes> {
    return this[4].toBytesArray();
  }

  get verificationGas(): BigInt {
    return this[5].toBigInt();
  }

  get executionGas(): BigInt {
    return this[6].toBigInt();
  }

  get numRefunds(): BigInt {
    return this[7].toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get teller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get subtreeUpdateVerifier(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OnERC1155BatchReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155BatchReceivedCall__Inputs {
    return new OnERC1155BatchReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155BatchReceivedCall__Outputs {
    return new OnERC1155BatchReceivedCall__Outputs(this);
  }
}

export class OnERC1155BatchReceivedCall__Inputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get value3(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155BatchReceivedCall__Outputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC1155ReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155ReceivedCall__Inputs {
    return new OnERC1155ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155ReceivedCall__Outputs {
    return new OnERC1155ReceivedCall__Outputs(this);
  }
}

export class OnERC1155ReceivedCall__Inputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155ReceivedCall__Outputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetSubtreeBatchFillerPermissionCall extends ethereum.Call {
  get inputs(): SetSubtreeBatchFillerPermissionCall__Inputs {
    return new SetSubtreeBatchFillerPermissionCall__Inputs(this);
  }

  get outputs(): SetSubtreeBatchFillerPermissionCall__Outputs {
    return new SetSubtreeBatchFillerPermissionCall__Outputs(this);
  }
}

export class SetSubtreeBatchFillerPermissionCall__Inputs {
  _call: SetSubtreeBatchFillerPermissionCall;

  constructor(call: SetSubtreeBatchFillerPermissionCall) {
    this._call = call;
  }

  get filler(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get permission(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetSubtreeBatchFillerPermissionCall__Outputs {
  _call: SetSubtreeBatchFillerPermissionCall;

  constructor(call: SetSubtreeBatchFillerPermissionCall) {
    this._call = call;
  }
}

export class SetSupportedContractAllowlistPermissionCall extends ethereum.Call {
  get inputs(): SetSupportedContractAllowlistPermissionCall__Inputs {
    return new SetSupportedContractAllowlistPermissionCall__Inputs(this);
  }

  get outputs(): SetSupportedContractAllowlistPermissionCall__Outputs {
    return new SetSupportedContractAllowlistPermissionCall__Outputs(this);
  }
}

export class SetSupportedContractAllowlistPermissionCall__Inputs {
  _call: SetSupportedContractAllowlistPermissionCall;

  constructor(call: SetSupportedContractAllowlistPermissionCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get permission(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetSupportedContractAllowlistPermissionCall__Outputs {
  _call: SetSupportedContractAllowlistPermissionCall;

  constructor(call: SetSupportedContractAllowlistPermissionCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
