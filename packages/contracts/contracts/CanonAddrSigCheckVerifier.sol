// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import {Pairing} from "./libs/Pairing.sol";
import {Groth16} from "./libs/Groth16.sol";
import {ICanonAddrSigCheckVerifier} from "./interfaces/ICanonAddrSigCheckVerifier.sol";

contract CanonAddrSigCheckVerifier is ICanonAddrSigCheckVerifier {
    function verifyingKey()
        internal
        pure
        returns (Groth16.VerifyingKey memory vk)
    {
        vk.alpha1 = Pairing.G1Point(
            20491192805390485299153009773594534940189261866228447918068658471970481763042,
            9383485363053290200918347156157836566562967994039712273449902621266178545958
        );

        vk.beta2 = Pairing.G2Point(
            [
                4252822878758300859123897981450591353533073413197771768651442665752259397132,
                6375614351688725206403948262868962793625744043794305715222011528459656738731
            ],
            [
                21847035105528745403288232691147584728191162732299865338377159692350059136679,
                10505242626370262277552901082094356697409835680220590971873171140371331206856
            ]
        );
        vk.gamma2 = Pairing.G2Point(
            [
                11559732032986387107991004021392285783925812861821192530917403151452391805634,
                10857046999023057135944570762232829481370756359578518086990519993285655852781
            ],
            [
                4082367875863433681332203403145435568316851327593401208105741076214120093531,
                8495653923123431417604973247489272438418190587263600148770280649306958101930
            ]
        );
        vk.delta2 = Pairing.G2Point(
            [
                21285461408339149836819464155186191181043011339951578416163229016346697502857,
                4761012584205755692308002816946713932223363139636637093345018063225829232378
            ],
            [
                9010708584991867243174853970985319898237997106661774008190236299361556403304,
                3708429478878159669294543428116416333829890959022760504722154175354904797285
            ]
        );
        vk.IC = new Pairing.G1Point[](3);

        vk.IC[0] = Pairing.G1Point(
            9434419984474851429999818556499498720905949788669563531761832810248946719929,
            12786292846794097404189108015078340477344834475506107175458891298573398835448
        );
        vk.IC[1] = Pairing.G1Point(
            1351205185386233948088849642139304433481076955124622098499493284515349624853,
            10015969721710150341012001783889115514198280567466133853343765962332911106146
        );
        vk.IC[2] = Pairing.G1Point(
            14199811613614573570404011326440427786868292110859980021297382954977743404378,
            2453275421666044051857979484118280237638805026224254999178926792238356037468
        );
    }

    /// @return r  bool true if proof is valid
    function verifyProof(
        uint256[8] memory proof,
        uint256[] memory pi
    ) public view override returns (bool r) {
        return Groth16.verifyProof(verifyingKey(), proof, pi);
    }

    /// @return r bool true if proofs are valid
    function batchVerifyProofs(
        uint256[8][] memory proofs,
        uint256[][] memory allPis
    ) public view override returns (bool) {
        return Groth16.batchVerifyProofs(verifyingKey(), proofs, allPis);
    }
}
