// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.17;

import {Pairing} from "./libs/Pairing.sol";
import {Groth16} from "./libs/Groth16.sol";
import {ICanonAddrSigCheckVerifier} from "./interfaces/ICanonAddrSigCheckVerifier.sol";

contract CanonAddrSigCheckVerifier is ICanonAddrSigCheckVerifier {
    function verifyingKey()
        internal
        pure
        returns (Groth16.VerifyingKey memory vk)
    {
        vk.alpha1 = Pairing.G1Point(
            20491192805390485299153009773594534940189261866228447918068658471970481763042,
            9383485363053290200918347156157836566562967994039712273449902621266178545958
        );

        vk.beta2 = Pairing.G2Point(
            [
                4252822878758300859123897981450591353533073413197771768651442665752259397132,
                6375614351688725206403948262868962793625744043794305715222011528459656738731
            ],
            [
                21847035105528745403288232691147584728191162732299865338377159692350059136679,
                10505242626370262277552901082094356697409835680220590971873171140371331206856
            ]
        );
        vk.gamma2 = Pairing.G2Point(
            [
                11559732032986387107991004021392285783925812861821192530917403151452391805634,
                10857046999023057135944570762232829481370756359578518086990519993285655852781
            ],
            [
                4082367875863433681332203403145435568316851327593401208105741076214120093531,
                8495653923123431417604973247489272438418190587263600148770280649306958101930
            ]
        );
        vk.delta2 = Pairing.G2Point(
            [
                16281408921658667457894483851988462925481968028445578180856971208230361059910,
                19880456410089711176226217201339817455232211842037670991668911603221493994827
            ],
            [
                9172439366472336977445006272494533723298525485012177774419741540973594803048,
                9245064592168393694119809957228266780060407877328513956281735695270963066655
            ]
        );
        vk.IC = new Pairing.G1Point[](3);

        vk.IC[0] = Pairing.G1Point(
            2351338799011833313875395795748479038128931695161462326898730800488933449966,
            4254105609765976167414767968133856792642994786909541075627341503091612618448
        );
        vk.IC[1] = Pairing.G1Point(
            21641183606086241662459853987660480701005646485631180689758614077584778543440,
            19857479332696928289949568795053275925922717382484995817621273344955966953988
        );
        vk.IC[2] = Pairing.G1Point(
            18953900801063123821288686913287159077774889563342677186781492261300303154089,
            10408597192023397511117763420435891686470216962533274280042730177258957554153
        );
    }

    /// @return r  bool true if proof is valid
    function verifyProof(
        uint256[8] memory proof,
        uint256[] memory pi
    ) public view override returns (bool r) {
        return Groth16.verifyProof(verifyingKey(), proof, pi);
    }

    /// @return r bool true if proofs are valid
    function batchVerifyProofs(
        uint256[8][] memory proofs,
        uint256[][] memory allPis
    ) public view override returns (bool) {
        return Groth16.batchVerifyProofs(verifyingKey(), proofs, allPis);
    }
}
