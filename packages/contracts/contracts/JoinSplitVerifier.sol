// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.17;

import {Pairing} from "./libs/Pairing.sol";
import {Groth16} from "./libs/Groth16.sol";
import {IJoinSplitVerifier} from "./interfaces/IJoinSplitVerifier.sol";

contract JoinSplitVerifier is IJoinSplitVerifier {
    function verifyingKey()
        internal
        pure
        returns (Groth16.VerifyingKey memory vk)
    {
        vk.alpha1 = Pairing.G1Point(
            20491192805390485299153009773594534940189261866228447918068658471970481763042,
            9383485363053290200918347156157836566562967994039712273449902621266178545958
        );

        vk.beta2 = Pairing.G2Point(
            [
                4252822878758300859123897981450591353533073413197771768651442665752259397132,
                6375614351688725206403948262868962793625744043794305715222011528459656738731
            ],
            [
                21847035105528745403288232691147584728191162732299865338377159692350059136679,
                10505242626370262277552901082094356697409835680220590971873171140371331206856
            ]
        );
        vk.gamma2 = Pairing.G2Point(
            [
                11559732032986387107991004021392285783925812861821192530917403151452391805634,
                10857046999023057135944570762232829481370756359578518086990519993285655852781
            ],
            [
                4082367875863433681332203403145435568316851327593401208105741076214120093531,
                8495653923123431417604973247489272438418190587263600148770280649306958101930
            ]
        );
        vk.delta2 = Pairing.G2Point(
            [
                1142522064282672363078270236999033144242629338166596316949672836496283482516,
                19366817834852081103470919617081035135462886961143592420751645858940660117424
            ],
            [
                18087520091963188960458886326292216015742626079251348870503681071602150701191,
                12619281767897780409640533587842759634254066480820094588969974648042594406841
            ]
        );
        vk.IC = new Pairing.G1Point[](12);

        vk.IC[0] = Pairing.G1Point(
            19517366790680649023694875233588307612984125234041413591766541116955404595206,
            11831027737901400184373032848720418794957668779289618260300583946466406434134
        );
        vk.IC[1] = Pairing.G1Point(
            4223483984802384786135987358947486465889113754414212935513378972539807709462,
            12778571975231419581291482149294276956679991382108639605799624022206696559313
        );
        vk.IC[2] = Pairing.G1Point(
            17113458294801008699689318684511966604666527764044528274361902251714560690993,
            913207821506531593905500542680679721262894962209591049038065811566278367882
        );
        vk.IC[3] = Pairing.G1Point(
            18480142305347389205284224465261306574008210164265037326048074175219699337375,
            10502758769680222273523875089498736030484162881896662803324871487518581473864
        );
        vk.IC[4] = Pairing.G1Point(
            585921644468639204823562063871524325578567614695844124346705166777860026384,
            21669815261410789212624835869816891574556195379886220997391908081004270019965
        );
        vk.IC[5] = Pairing.G1Point(
            3833809370215086435759164938728664965507529786222612372393216160813947470587,
            9553093701856217121801859076383690605581180072604567346735035548811271779681
        );
        vk.IC[6] = Pairing.G1Point(
            13521789224138511919929357874746346414372411298790046012628200917099321264437,
            5102426090977844160812997397490154429389272546125748312821997405026258105008
        );
        vk.IC[7] = Pairing.G1Point(
            13835828443112243554013559473821837738244623443848851374480331796469912112359,
            10556337824401791868824090771688754596836667584009100506634885314344945531374
        );
        vk.IC[8] = Pairing.G1Point(
            7354148148982838326957246808643894732293227789062337105318237936145077605430,
            1225040563829203577591990246985222979477824589271555766856045952455583745146
        );
        vk.IC[9] = Pairing.G1Point(
            11520399067143949401341759247695143927507780713932283699487723802147351590368,
            17567560868226808368939072190841926591389901720711186033602401205727713419710
        );
        vk.IC[10] = Pairing.G1Point(
            19790898041045640900954608865188552683977300355607874260443303413377450696153,
            6646535661105553520200597250948868575208541239236744509517058496583302976906
        );
        vk.IC[11] = Pairing.G1Point(
            21499845537793220058277294339297164211206987970464127049098655160351762378600,
            5863505670216141652233410371691023451197453340401133218460601390934319679798
        );
    }

    /// @return r  bool true if proof is valid
    function verifyProof(
        uint256[8] memory proof,
        uint256[] memory pi
    ) public view override returns (bool r) {
        return Groth16.verifyProof(verifyingKey(), proof, pi);
    }

    /// @return r bool true if proofs are valid
    function batchVerifyProofs(
        uint256[8][] memory proofs,
        uint256[][] memory allPis
    ) public view override returns (bool) {
        return Groth16.batchVerifyProofs(verifyingKey(), proofs, allPis);
    }
}
