// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.17;

import {Pairing} from "./libs/Pairing.sol";
import {Groth16} from "./libs/Groth16.sol";
import {IJoinSplitVerifier} from "./interfaces/IJoinSplitVerifier.sol";

contract JoinSplitVerifier is IJoinSplitVerifier {
    function verifyingKey()
        internal
        pure
        returns (Groth16.VerifyingKey memory vk)
    {
        vk.alpha1 = Pairing.G1Point(
            20491192805390485299153009773594534940189261866228447918068658471970481763042,
            9383485363053290200918347156157836566562967994039712273449902621266178545958
        );

        vk.beta2 = Pairing.G2Point(
            [
                4252822878758300859123897981450591353533073413197771768651442665752259397132,
                6375614351688725206403948262868962793625744043794305715222011528459656738731
            ],
            [
                21847035105528745403288232691147584728191162732299865338377159692350059136679,
                10505242626370262277552901082094356697409835680220590971873171140371331206856
            ]
        );
        vk.gamma2 = Pairing.G2Point(
            [
                11559732032986387107991004021392285783925812861821192530917403151452391805634,
                10857046999023057135944570762232829481370756359578518086990519993285655852781
            ],
            [
                4082367875863433681332203403145435568316851327593401208105741076214120093531,
                8495653923123431417604973247489272438418190587263600148770280649306958101930
            ]
        );
        vk.delta2 = Pairing.G2Point(
            [
                2827695128802730409792023965273324015243405653457030233275276579173061450365,
                4909830438862534904234084509217170824418695170227838067628206441167646613939
            ],
            [
                689337874695343456123323159389339039265607056634185163187423076373062926436,
                13215738825457131165184924427459505885405420874392542902793321195753668230952
            ]
        );
        vk.IC = new Pairing.G1Point[](12);

        vk.IC[0] = Pairing.G1Point(
            5273833259896033576997655085051063999041341664915361743741053440208027702401,
            18787370146380068490818521799424111134346218484079105938622530446140017046167
        );
        vk.IC[1] = Pairing.G1Point(
            13513905562088699714619428358615357824353975550324968582789195519594863647486,
            18213537035652968251513888982075451221327856269594576712823208491569885869
        );
        vk.IC[2] = Pairing.G1Point(
            12059574518424375389809356136761085634211207030385675109204449520503413499868,
            7058527298720274097562410374436998766962627988736842754300716418467455854378
        );
        vk.IC[3] = Pairing.G1Point(
            11992343280383073403901620376687648036698772587301656047370979071655112784141,
            2198151614899775953658433223855503850232930421186790873730044508277151522965
        );
        vk.IC[4] = Pairing.G1Point(
            5300310009005528240731824522169723651727116495899306273271445276780888619172,
            9154034670676443015449174312789394943948657528027614429884763294982217623491
        );
        vk.IC[5] = Pairing.G1Point(
            5486205676346829723053855389724450476997120597747769725979734340482972402964,
            8825686621206249838919682908970705551039231097702341000354839708409915172326
        );
        vk.IC[6] = Pairing.G1Point(
            15941552422012738602988091007472879448102816879351668213089134882648650572160,
            223278987443688952347899000330438308851406012824797308027495795196023117357
        );
        vk.IC[7] = Pairing.G1Point(
            20980844855739088712253824990134559155956999521317618332192130813805052327230,
            1059885320484446363724388690319261130651435688754377353958249528689655856346
        );
        vk.IC[8] = Pairing.G1Point(
            11439319735124010038108959838716517051133455242442192166055559986326023325230,
            1614960324259858960797716757983925610720009458196622314210663883793720187601
        );
        vk.IC[9] = Pairing.G1Point(
            14700872096264062283812631399880482418421642340795542524771944143441325000588,
            17134062347636800668829459829795411694559068709262707243980804482341056497154
        );
        vk.IC[10] = Pairing.G1Point(
            1851134593459633432538006178830029058609014162482859756816787905806892227664,
            10246491842281375505371203696441896500629226046816261046581901170015715416868
        );
        vk.IC[11] = Pairing.G1Point(
            4904866257373545590336318243856074363449943462150356094452682371137614689436,
            13080569745299083013411238170120209538286779021607983718172642614738890456072
        );
    }

    /// @return r  bool true if proof is valid
    function verifyProof(
        uint256[8] memory proof,
        uint256[] memory pi
    ) public view override returns (bool r) {
        return Groth16.verifyProof(verifyingKey(), proof, pi);
    }

    /// @return r bool true if proofs are valid
    function batchVerifyProofs(
        uint256[8][] memory proofs,
        uint256[][] memory allPis
    ) public view override returns (bool) {
        return Groth16.batchVerifyProofs(verifyingKey(), proofs, allPis);
    }
}
