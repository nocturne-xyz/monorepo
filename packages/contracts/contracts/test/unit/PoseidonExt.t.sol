// SPDX-License-Identifier: MIT OR Apache-2.0
pragma solidity ^0.8.17;

import "forge-std/Test.sol";
import {PoseidonDeployer} from "../utils/PoseidonDeployer.sol";
import {IHasherExtT3, IHasherExtT4, IHasherExtT7} from "../../interfaces/IHasherExt.sol";
import {PoseidonExtHasherT3, PoseidonExtHasherT4, PoseidonExtHasherT7} from "../../PoseidonExt.sol";

contract TestPoseidonExt is PoseidonDeployer {
    IHasherExtT3 public hasherExtT3;
    IHasherExtT4 public hasherExtT4;
    IHasherExtT7 public hasherExtT7;

    function setUp() public virtual {
        deployPoseidonExts();

        hasherExtT3 = IHasherExtT3(new PoseidonExtHasherT3(poseidonExtT3));
        hasherExtT4 = IHasherExtT4(new PoseidonExtHasherT4(poseidonExtT4));
        hasherExtT7 = IHasherExtT7(new PoseidonExtHasherT7(poseidonExtT7));
    }

    // test vectors generated by `core/scripts/genPoseidonExtTestCase.ts`

    function testPoseidonExtT3() public {
        uint256 initialState = 12345;
        uint256[2] memory elems = [
            10027193126392920587445605909488679119983302783822843462609580951738763699539,
            6120976502570684091449196906829691067743813264798040003132833378824803478333
        ];

        uint256 out = hasherExtT3.hash(initialState, elems);
        assertEq(
            out,
            13494082761443991601203140135307169360532259055399907876777304414775194034616
        );
    }

    function testPoseidonExtT4() public {
        uint256 initialState = 12345;
        uint256[3] memory elems = [
            14029862549196343818295244306496166159280089208812757667269247741685628161453,
            2987809403813697992214825600447930725509675862519623506806389436320006405598,
            15027148011476026546740151512423663403689907879951941452883383756308767731564
        ];

        uint256 out = hasherExtT4.hash(initialState, elems);
        assertEq(
            out,
            14814198628931002714082528444448734548047153245877038000832486993474233148368
        );
    }

    function testPoseidonExtT7() public {
        uint256 initialState = 12345;
        uint256[6] memory elems = [
            7582664194989334147964519696574234818934700821249300059549420663605622366353,
            16451147050888025411723428815349925719634578719580951185240162367535797328461,
            20392324351910955531971399640926012892064567011378363891605885057389317689351,
            5596524235307208226852411459295076322453867909932551613205112867529948129598,
            7689365520501515145950758532058899897448068086671988541068021697385825536328,
            20189002453366186987306544779411522442155293636562573392751259808789766423922
        ];

        uint256 out = hasherExtT7.hash(initialState, elems);
        assertEq(
            out,
            12909966250274990110217553766395179141451634467833023518975398484075407288231
        );
    }
}
