name: Build/Cache Docker + E2E Tests

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build-and-test:
    name: ${{ matrix.test_suite.name }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test_suite:
          - name: build-and-test-e2e-full-system
            command: 'full system:'
          - name: build-and-test-e2e-canon-addr-registry
            command: 'Canonical Address Registry'
          - name: insertion writer test suite
            command: 'InsertionWriter'
          - name: optimistic nf tracking test suite
            command: 'Optimistic nullifier tracking'
          - name: build-and-test-e2e-deposit-fetching
            command: 'Fetching Deposit Events'
          - name: rpc sync test suite
            command: 'syncing NocturneClient with RPCSyncAdapter'
          - name: subgraph sync test suite
            command: 'syncing NocturneClient with SubgraphSyncAdapter'
          - name: uniswap v3 fork tests
            command: 'submits single hop'

    steps:
      - name: checkout repo and get submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          path: ./monorepo

      - name: Checkout protocol repo
        uses: actions/checkout@v4
        with:
          repository: nocturne-xyz/protocol
          path: ./protocol

      - name: cache dependencies
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install redis with apt
        run: |
          sudo apt install lsb-release curl gpg
          curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list
          sudo apt-get update
          sudo apt-get install redis

      - name: install node
        uses: actions/setup-node@v3
        with:
          node-version: "v18.12.1"
          cache: "yarn"

      - name: corepack enable
        run: corepack enable

      - name: install foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly-e15e33a07c0920189fc336391f538c3dad53da73

      - name: yarn install in protocol
        working-directory: ./protocol
        run: yarn install --immutable

      - name: yarn build in protocol
        working-directory: ./protocol
        run: yarn build

      - name: yarn link in monorepo
        working-directory: ./monorepo
        run: yarn link:protocol

      - name: yarn build in monorepo
        working-directory: ./monorepo
        run: yarn build

      - name: run ${{ matrix.test_suite.name }}
        working-directory: ./monorepo/packages/e2e-tests
        env:
          REDISMS_SYSTEM_BINARY: "/usr/bin/redis-server"
        run: yarn test:e2e -g '${{ matrix.test_suite.command }}'
