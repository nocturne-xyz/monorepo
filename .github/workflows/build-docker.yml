name: Build and Cache Docker
on: [push]
jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "v18.12.1"
      # This is a separate action that sets up buildx runner
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build hardhat
        uses: docker/build-push-action@v4
        with:
          context: ./packages/e2e-tests/hardhat
          file: ./packages/e2e-tests/hardhat/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Build subtree updater
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./packages/subtree-updater/Mock.Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Build and cache images with docker-compose
        run: |
          # Build the images using docker-compose
          docker compose -f ./packages/bundler/docker-compose.yml build

          # Get a list of all the images built by docker-compose
          IMAGE_NAMES=$(docker images --format '{{.Repository}}:{{.Tag}}')

          # Build and cache each image individually
          for IMAGE_NAME in $IMAGE_NAMES; do
            docker push --cache-to type=local,dest=/tmp/.buildx-cache-new,reference=$IMAGE_NAME $IMAGE_NAME
          done
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
